@using CarPooling.Data.Models;
@using Carpooling.Models;
@using Microsoft.AspNetCore.Identity;
@inject UserManager<User> UserManager
@model PassengerViewInfoModel

@{
    ViewData["Title"] = "Passenger Info";
    decimal? rating = 0;
    int count = 0;
    var user = await UserManager.GetUserAsync(User);
    
}

@foreach (var item in user.PassengerFeedbacks)
{
    count = count + 1;
    rating = rating + item.Rating;
}


<div>
    <h2>User, @Model.Username!</h2>
    <h5>Profile Details:</h5>
    <br>
    @if (rating == 0)
    {
        <p><i class="fas fa-star"></i> Rating: No ratings yet</p>
    }
    else
    {
        rating = rating / user.PassengerFeedbacks.Count();
        <p><i class="fas fa-star"></i> Rating: @string.Format("{0:0.00}", rating)</p>
    }
    <p><i class="fas fa-comments"></i> Feedbacks: @user.PassengerFeedbacks.Count()</p>
    <br>
    <hr>
    @foreach (var feedback in user.PassengerFeedbacks)
    {
        <div class="feedback-container">
            <div class="feedback-comment">
                <span class="feedback-username">From @feedback.Driver.UserName</span>
                <span class="feedback-label">feedback based on realised ride:</span>
                <div class="feedback-rating">
                    <p class="feedback-rating-value">
                        @for (int i = 0; i < 5; i++)
                        {
                            <i class="@(i < feedback.Rating ? "fas" : "far") fa-star feedback-star"></i>
                        }
                    </p>
                </div>
            </div>
            <p>@feedback.Comment</p>
            <p class="feedback-date">@feedback.CreatedOn.ToString("dd. MMM. yyyy.")</p>
        </div>
        <hr />
    }
